module SuperIncreasingSeq =
    let s = [
        1I;
        4I;
        6I;
        13I;
        27I;
        52I;
        106I;
        210I;
        420I;
        840I;
        1681I;
        3363I;
        6724I;
        13450I;
        26899I;
        53797I;
        107594I;
        215188I;
        430378I;
        860756I;
        1721512I;
        3443023I;
        6886047I;
        13772092I;
        27544185I;
        55088369I;
        110176740I;
        220353478I;
        440706957I;
        881413914I;
        1762827829I;
        3525655657I;
        7051311314I;
        14102622628I;
        28205245256I;
        56410490512I;
        112820981024I;
        225641962047I;
        451283924096I;
        902567848191I;
        1805135696382I;
        3610271392765I;
        7220542785530I;
        14441085571059I;
        28882171142119I;
        57764342284237I;
        115528684568475I;
        231057369136948I;
        462114738273896I;
        924229476547794I;
        1848458953095587I;
        3696917906191173I;
        7393835812382346I;
        14787671624764694I;
        29575343249529386I;
        59150686499058773I;
        118301372998117545I;
        236602745996235092I;
        473205491992470182I;
        946410983984940365I;
        1892821967969880730I;
        3785643935939761461I;
        7571287871879522921I;
        15142575743759045843I;
        30285151487518091686I;
        60570302975036183372I;
        121140605950072366743I;
        242281211900144733487I;
        484562423800289466972I;
        969124847600578933945I;
        1938249695201157867891I;
        3876499390402315735780I;
        7752998780804631471560I;
        15505997561609262943121I;
        31011995123218525886241I;
        62023990246437051772484I;
        124047980492874103544967I;
        248095960985748207089933I;
        496191921971496414179867I;
        992383843942992828359735I;
        1984767687885985656719469I;
        3969535375771971313438939I;
        7939070751543942626877876I;
        15878141503087885253755754I;
        31756283006175770507511507I;
        63512566012351541015023013I;
        127025132024703082030046028I;
        254050264049406164060092055I;
        508100528098812328120184111I;
        1016201056197624656240368220I;
        2032402112395249312480736441I;
        4064804224790498624961472881I;
        8129608449580997249922945764I;
        16259216899161994499845891528I;
        32518433798323988999691783056I;
        65036867596647977999383566112I;
        130073735193295955998767132224I;
        260147470386591911997534264448I;
        520294940773183823995068528895I;
        1040589881546367647990137057790I;
        2081179763092735295980274115581I;
        4162359526185470591960548231162I;
        8324719052370941183921096462322I;
        16649438104741882367842192924645I;
        33298876209483764735684385849290I;
        66597752418967529471368771698580I;
        133195504837935058942737543397161I;
        266391009675870117885475086794321I;
        532782019351740235770950173588641I;
        1065564038703480471541900347177283I;
        2131128077406960943083800694354567I;
        4262256154813921886167601388709133I;
        8524512309627843772335202777418267I;
        17049024619255687544670405554836534I;
        34098049238511375089340811109673066I;
        68196098477022750178681622219346134I;
        136392196954045500357363244438692268I;
        272784393908091000714726488877384534I;
        545568787816182001429452977754769068I;
        1091137575632364002858905955509538137I;
        2182275151264728005717811911019076275I;
        4364550302529456011435623822038152549I;
        8729100605058912022871247644076305097I;
        17458201210117824045742495288152610194I;
        34916402420235648091484990576305220389I;
        69832804840471296182969981152610440777I;
        139665609680942592365939962305220881556I;
        279331219361885184731879924610441763111I;
        558662438723770369463759849220883526221I;
        1117324877447540738927519698441767052443I;
        2234649754895081477855039396883534104885I;
        4469299509790162955710078793767068209770I;
        8938599019580325911420157587534136419541I;
        17877198039160651822840315175068272839081I;
        35754396078321303645680630350136545678164I;
        71508792156642607291361260700273091356327I;
        143017584313285214582722521400546182712653I;
        286035168626570429165445042801092365425306I;
        572070337253140858330890085602184730850613I;
        1144140674506281716661780171204369461701225I;
        2288281349012563433323560342408738923402451I;
        4576562698025126866647120684817477846804902I;
        9153125396050253733294241369634955693609804I;
        18306250792100507466588482739269911387219607I;
        36612501584201014933176965478539822774439214I;
        73225003168402029866353930957079645548878428I;
        146450006336804059732707861914159291097756857I;
        292900012673608119465415723828318582195513713I;
        585800025347216238930831447656637164391027428I;
        1171600050694432477861662895313274328782054856I;
        2343200101388864955723325790626548657564109712I;
        4686400202777729911446651581253097315128219422I;
        9372800405555459822893303162506194630256438845I;
        18745600811110919645786606325012389260512877689I;
        37491201622221839291573212650024778521025755380I;
        74982403244443678583146425300049557042051510760I;
        149964806488887357166292850600099114084103021520I;
        299929612977774714332585701200198228168206043039I;
        599859225955549428665171402400396456336412086077I;
        1199718451911098857330342804800792912672824172154I;
        2399436903822197714660685609601585825345648344309I;
        4798873807644395429321371219203171650691296688617I;
        9597747615288790858642742438406343301382593377236I;
        19195495230577581717285484876812686602765186754472I;
        38390990461155163434570969753625373205530373508943I;
        76781980922310326869141939507250746411060747017886I;
        153563961844620653738283879014501492822121494035771I;
        307127923689241307476567758029002985644242988071544I;
        614255847378482614953135516058005971288485976143088I;
        1228511694756965229906271032116011942576971952286174I;
        2457023389513930459812542064232023885153943904572348I;
        4914046779027860919625084128464047770307887809144697I;
        9828093558055721839250168256928095540615775618289393I;
        19656187116111443678500336513856191081231551236578786I;
        39312374232222887357000673027712382162463102473157572I;
        78624748464445774714001346055424764324926204946315144I;
        157249496928891549428002692110849528649852409892630290I;
        314498993857783098856005384221699057299704819785260580I;
        628997987715566197712010768443398114599409639570521159I;
        1257995975431132395424021536886796229198819279141042317I;
        2515991950862264790848043073773592458397638558282084635I;
        5031983901724529581696086147547184916795277116564169270I;
        10063967803449059163392172295094369833590554233128338539I;
        20127935606898118326784344590188739667181108466256677078I;
        40255871213796236653568689180377479334362216932513354157I;
        80511742427592473307137378360754958668724433865026708315I;
        161023484855184946614274756721509917337448867730053416630I;
        322046969710369893228549513443019834674897735460106833259I;
        644093939420739786457099026886039669349795470920213666518I;
        1288187878841479572914198053772079338699590941840427333035I;
        2576375757682959145828396107544158677399181883680854666070I;
        5152751515365918291656792215088317354798363767361709332140I;
        10305503030731836583313584430176634709596727534723418664282I;
        20611006061463673166627168860353269419193455069446837328562I;
        41222012122927346333254337720706538838386910138893674657125I;
        82444024245854692666508675441413077676773820277787349314250I;
        164888048491709385333017350882826155353547640555574698628499I;
        329776096983418770666034701765652310707095281111149397257000I;
        659552193966837541332069403531304621414190562222298794513998I;
        1319104387933675082664138807062609242828381124444597589027997I;
        2638208775867350165328277614125218485656762248889195178055993I;
        5276417551734700330656555228250436971313524497778390356111987I;
        10552835103469400661313110456500873942627048995556780712223975I;
        21105670206938801322626220913001747885254097991113561424447948I;
        42211340413877602645252441826003495770508195982227122848895898I;
        84422680827755205290504883652006991541016391964454245697791795I;
        168845361655510410581009767304013983082032783928908491395583590I;
        337690723311020821162019534608027966164065567857816982791167180I;
        675381446622041642324039069216055932328131135715633965582334359I;
        1350762893244083284648078138432111864656262271431267931164668719I;
        2701525786488166569296156276864223729312524542862535862329337437I;
        5403051572976333138592312553728447458625049085725071724658674876I;
        10806103145952666277184625107456894917250098171450143449317349752I;
        21612206291905332554369250214913789834500196342900286898634699504I;
        43224412583810665108738500429827579669000392685800573797269399006I;
        86448825167621330217477000859655159338000785371601147594538798012I;
        172897650335242660434954001719310318676001570743202295189077596024I;
        345795300670485320869908003438620637352003141486404590378155192048I;
        691590601340970641739816006877241274704006282972809180756310384098I;
        1383181202681941283479632013754482549408012565945618361512620768195I;
        2766362405363882566959264027508965098816025131891236723025241536389I;
        5532724810727765133918528055017930197632050263782473446050483072779I;
        11065449621455530267837056110035860395264100527564946892100966145558I;
        22130899242911060535674112220071720790528201055129893784201932291117I;
        44261798485822121071348224440143441581056402110259787568403864582232I;
        88523596971644242142696448880286883162112804220519575136807729164466I;
        177047193943288484285392897760573766324225608441039150273615458328932I;
        354094387886576968570785795521147532648451216882078300547230916657864I;
        708188775773153937141571591042295065296902433764156601094461833315727I;
        1416377551546307874283143182084590130593804867528313202188923666631454I;
        2832755103092615748566286364169180261187609735056626404377847333262908I;
        5665510206185231497132572728338360522375219470113252808755694666525815I;
        11331020412370462994265145456676721044750438940226505617511389333051632I;
        22662040824740925988530290913353442089500877880453011235022778666103263I;
        45324081649481851977060581826706884179001755760906022470045557332206527I;
        90648163298963703954121163653413768358003511521812044940091114664413053I;
        181296326597927407908242327306827536716007023043624089880182229328826105I;
        362592653195854815816484654613655073432014046087248179760364458657652210I;
        725185306391709631632969309227310146864028092174496359520728917315304420I;
        1450370612783419263265938618454620293728056184348992719041457834630608840I;
        2900741225566838526531877236909240587456112368697985438082915669261217682I;
        5801482451133677053063754473818481174912224737395970876165831338522435362I;
        11602964902267354106127508947636962349824449474791941752331662677044870724I;
        23205929804534708212255017895273924699648898949583883504663325354089741450I;
        46411859609069416424510035790547849399297797899167767009326650708179482899I;
        92823719218138832849020071581095698798595595798335534018653301416358965797I;
        185647438436277665698040143162191397597191191596671068037306602832717931594I;
        371294876872555331396080286324382795194382383193342136074613205665435863190I;
        742589753745110662792160572648765590388764766386684272149226411330871726378I;
        1485179507490221325584321145297531180777529532773368544298452822661743452757I;
        2970359014980442651168642290595062361555059065546737088596905645323486905513I;
        5940718029960885302337284581190124723110118131093474177193811290646973811026I;
        11881436059921770604674569162380249446220236262186948354387622581293947622053I;
        23762872119843541209349138324760498892440472524373896708775245162587895244105I;
        47525744239687082418698276649520997784880945048747793417550490325175790488211I;
        95051488479374164837396553299041995569761890097495586835100980650351580976423I;
        190102976958748329674793106598083991139523780194991173670201961300703161952844I;
        380205953917496659349586213196167982279047560389982347340403922601406323905688I;
        760411907834993318699172426392335964558095120779964694680807845202812647811376I;
        1520823815669986637398344852784671929116190241559929389361615690405625295622753I;
        3041647631339973274796689705569343858232380483119858778723231380811250591245507I;
        6083295262679946549593379411138687716464760966239717557446462761622501182491013I;
        12166590525359893099186758822277375432929521932479435114892925523245002364982027I;
        24333181050719786198373517644554750865859043864958870229785851046490004729964052I;
        48666362101439572396747035289109501731718087729917740459571702092980009459928106I;
        97332724202879144793494070578219003463436175459835480919143404185960018919856212I;
        194665448405758289586988141156438006926872350919670961838286808371920037839712423I;
        389330896811516579173976282312876013853744701839341923676573616743840075679424846I;
        778661793623033158347952564625752027707489403678683847353147233487680151358849691I;
        1557323587246066316695905129251504055414978807357367694706294466975360302717699383I;
        3114647174492132633391810258503008110829957614714735389412588933950720605435398765I;
        6229294348984265266783620517006016221659915229429470778825177867901441210870797531I;
        12458588697968530533567241034012032443319830458858941557650355735802882421741595061I;
        24917177395937061067134482068024064886639660917717883115300711471605764843483190124I;
        49834354791874122134268964136048129773279321835435766230601422943211529686966380246I;
        99668709583748244268537928272096259546558643670871532461202845886423059373932760493I;
        199337419167496488537075856544192519093117287341743064922405691772846118747865520985I;
        398674838334992977074151713088385038186234574683486129844811383545692237495731041971I;
        797349676669985954148303426176770076372469149366972259689622767091384474991462083941I;
        1594699353339971908296606852353540152744938298733944519379245534182768949982924167882I;
        3189398706679943816593213704707080305489876597467889038758491068365537899965848335765I;
        6378797413359887633186427409414160610979753194935778077516982136731075799931696671530I;
        12757594826719775266372854818828321221959506389871556155033964273462151599863393343060I;
        25515189653439550532745709637656642443919012779743112310067928546924303199726786686121I;
        51030379306879101065491419275313284887838025559486224620135857093848606399453573372240I;
        102060758613758202130982838550626569775676051118972449240271714187697212798907146744480I;
        204121517227516404261965677101253139551352102237944898480543428375394425597814293488961I;
        408243034455032808523931354202506279102704204475889796961086856750788851195628586977921I;
        816486068910065617047862708405012558205408408951779593922173713501577702391257173955844I;
        1632972137820131234095725416810025116410816817903559187844347427003155404782514347911687I;
        3265944275640262468191450833620050232821633635807118375688694854006310809565028695823375I;
        6531888551280524936382901667240100465643267271614236751377389708012621619130057391646749I;
        13063777102561049872765803334480200931286534543228473502754779416025243238260114783293498I;
        26127554205122099745531606668960401862573069086456947005509558832050486476520229566586996I;
        52255108410244199491063213337920803725146138172913894011019117664100972953040459133173993I;
        104510216820488398982126426675841607450292276345827788022038235328201945906080918266347984I;
        209020433640976797964252853351683214900584552691655576044076470656403891812161836532695970I;
        418040867281953595928505706703366429801169105383311152088152941312807783624323673065391939I;
        836081734563907191857011413406732859602338210766622304176305882625615567248647346130783879I;
        1672163469127814383714022826813465719204676421533244608352611765251231134497294692261567756I;
        3344326938255628767428045653626931438409352843066489216705223530502462268994589384523135513I;
        6688653876511257534856091307253862876818705686132978433410447061004924537989178769046271026I;
        13377307753022515069712182614507725753637411372265956866820894122009849075978357538092542053I;
        26754615506045030139424365229015451507274822744531913733641788244019698151956715076185084105I;
        53509231012090060278848730458030903014549645489063827467283576488039396303913430152370168210I;
        107018462024180120557697460916061806029099290978127654934567152976078792607826860304740336420I;
        214036924048360241115394921832123612058198581956255309869134305952157585215653720609480672841I;
        428073848096720482230789843664247224116397163912510619738268611904315170431307441218961345681I;
        856147696193440964461579687328494448232794327825021239476537223808630340862614882437922691363I;
        1712295392386881928923159374656988896465588655650042478953074447617260681725229764875845382726I ]

module Foker =
    type Suit =
        | Spade
        | Heart
        | Diamond
        | Club
        static member GetAllSuits() =
            [ yield Spade
              yield Heart
              yield Diamond
              yield Club]

    type Rank =
        | Value of int
        | Ace
        | King
        | Queen
        | Jack
        static member GetAllRanks() =
            [ yield Ace
              yield King
              yield Queen
              yield Jack
              for i = 10 downto 2 do yield Value i ]

    type Card = { Suit: Suit; Rank: Rank } with
        static member fullDeck() =
            [ for suit in Suit.GetAllSuits() do
                for rank in Rank.GetAllRanks() do
                    yield {Suit = suit; Rank = rank; }]
        static member sampleDeck() =
            [ for rank in Rank.GetAllRanks() do
                for suit in Suit.GetAllSuits() do
                    yield {Suit = suit; Rank = rank; }]

    let secretConst = 67983083384398308895352885410810331598658348860123216788125036630707187343536665634219026I
    let gameSize = 80658175170943878571660636856403766975289505440883277824000000000000I

    let rec Shuffle dl (seed: bigint) =
        let dl_len = List.length dl
        if dl_len = 0 then []
        else
            let index = (int (seed % (bigint dl_len)))
            if index = 0 then dl.[0] :: (Shuffle dl.[1 .. ] (seed / (bigint dl_len)))
            else dl.[index] :: (Shuffle (dl.[ .. (index - 1)] @ dl.[(index + 1) .. ]) (seed / (bigint dl_len)))

module Utils =
    let rec str2Bint s n =
        if System.String.Equals(s, "") then n
        else str2Bint s.[1..] ((n * 256I) + (bigint (int s.[0])))

    let rec powerOf2 i =
        if i = 0 then 1I
        else 2I * powerOf2 (i - 1)

    let rec genState keys dict =
        if keys = 0I then 0I
        elif dict = [] then 0I
        else (keys % 2I) * dict.[0] + (genState (keys / 2I) dict.[1 ..])

printfn " /$$$$$$$$ /$$ /$$             /$$                           "
printfn " | $$_____// $$/ $$            | $$                          "
printfn " | $$     /$$$$$$$$$$  /$$$$$$ | $$   /$$  /$$$$$$   /$$$$$$ "
printfn " | $$$$$ |   $$  $$_/ /$$__  $$| $$  /$$/ /$$__  $$ /$$__  $$"
printfn " | $$__/  /$$$$$$$$$$| $$  \\ $$| $$$$$$/ | $$$$$$$$| $$  \\__/"
printfn " | $$    |_  $$  $$_/| $$  | $$| $$_  $$ | $$_____/| $$      "
printfn " | $$      | $$| $$  |  $$$$$$/| $$ \\  $$|  $$$$$$$| $$      "
printfn " |__/      |__/|__/   \\______/ |__/  \\__/ \\_______/|__/      "
printfn ""
printfn ""
printfn ""

printfn "Dealer: Welcome to my F#oker training school!"
System.Threading.Thread.Sleep(2000)
printfn "Dealer: Before you start a game, you have a only one chance shuffling the deck"
System.Threading.Thread.Sleep(3000)
printfn "Dealer: Honestly, this would be not a fair game."
System.Threading.Thread.Sleep(2000)
printfn "Dealer: You must practice for getting SA-SK-SQ-SJ-S10 (RSF) with your sneaky shuffling"
System.Threading.Thread.Sleep(3000)
printfn "Dealer: As the first step of that, Sort this randomly shuffled deck"
System.Threading.Thread.Sleep(3000)

printfn ""
printfn "Dealer gives you a strange deck..."
printf "Write down how will you shuffle the deck: "
let input = System.Console.ReadLine()
let intSeed = Utils.str2Bint input 0I

let loweredIntSeed = intSeed % (Utils.powerOf2 (List.length SuperIncreasingSeq.s))

let state = (Utils.genState loweredIntSeed SuperIncreasingSeq.s) - Foker.secretConst

printfn ""
if state < 0I then
    failwith "Dealer: Hmm.. That shuffling is really bad. You should make more randomness"
else
    printfn "Dealer: Great! Let's move on"

let shuffledDeck = Foker.Shuffle (Foker.Card.sampleDeck()) state

System.Threading.Thread.Sleep(3000)
printfn "Dealer: Let's check the deck"
System.Threading.Thread.Sleep(3000)

if shuffledDeck = Foker.Card.fullDeck() then
    if (state / Foker.gameSize) > 0I then
        printfn "Dealer: Yeah.. you did well but... your treak is easy to be caught. Practice more"
    else
        printfn "Dealer: Oh... I checked that you sorted the deck very well... Now you are a F#oker master"
        printfn "Congratz! Now you can get RSF at every F#oker game!"
else
    printfn "Dealer: Seriously? This is not sorted. Do it again"
