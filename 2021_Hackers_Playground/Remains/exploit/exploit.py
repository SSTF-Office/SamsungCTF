import lzf
from sav import Sav
from elf import Elf
from kaitaistruct import KaitaiStructError


def find(data, seq):
    i = 0
    while True:
        i = data.find(seq, i)
        if i == -1:
            return
        yield i
        i += len(seq)


f = Sav.from_file("X.sav")

for u in f.unit:
    if u.name != "pgm":
        continue

    for d in u.data:
        if d.record_type == Sav.RecordType.lzf:
            length, data = d.data[0], d.data[1:]
            data = lzf.decompress(data, length*1024)
        else:
            data = d.data

        for index in find(data, b"SCTF{"):
            end = data.find(b"}", index)
            if end != -1:
                print("[+]: Found flag")
                with open("flag", "wb") as o:
                    o.write(data[index + 5: end])

        for index in find(data, b"\x7fELF"):
            try:
                e = Elf.from_bytes(data[index:])

                if e.header.entry_point == 0:
                    continue

                for ph in e.header.program_headers:
                    if ph.flags_obj.value == 5 and ph.filesz > 0:
                        x = data[index + ph.offset: index + ph.offset + ph.filesz]
                        if b"Wanna flag?" in x:
                            print("[+]: Found ELF")

                            with open("elf", "wb") as o:
                                o.write(x)

            except KaitaiStructError:
                pass
